// Problem 1 

import java.util.*;
public class maximise_theno_choosen {
    public static void main(String[] args) {

        Scanner s = new Scanner(System.in);
        Scanner l =new Scanner(System.in);

        int N = s.nextInt();
        int K= l.nextInt();
        int [] A = new int[N];
        for(int i=0; i<N; i++ ) {
            A[i] = s.nextInt();
        }
        Arrays.sort(A);
        int sum =0;
        int index = N-1;
        for(int i =N-1 ; i>N-K-1; i--){
            sum =sum + A[i];
            if(A[i-1]==A[i]){
                sum=sum+A[i];
            }
        }
        System.out.println(sum);
    }
}


// Problem 2

public class triplets_who_givesum_zero {
    public static void main(String[] args) {
        int arr[]={-1,0,1,2,-1,4};
        int n = arr.length;
        for(int i =0 ; i<n-2 ; i++) {
            for(int j =i+1 ; j<n-1 ; i++){
                for(int k =j+1 ; k<n; i++) {
                    if (arr[i] + arr[j] + arr[k] == 0) {
                        System.out.printf("%d,%d,%d \n", arr[i], arr[j], arr[k]);
                    }
                }
            }
        }
    }
}



// Problem 3



import java.util.Scanner;
public class palindrome {
    public static void main(String[] args) {
        System.out.println("enter the string for checking palindrome or not");
        Scanner sc = new Scanner(System.in); 
        String str = sc.next();        
       str = str.toLowerCase();
       boolean flag = true;
        for (int i =0; i <= (str.length()/2) ; i++){
            char first = str.charAt(i);
            char last = str.charAt(str.length()-1-i );
            if (first != last ) {
                flag = false;
                break;
            }
        }
        System.out.println(flag ? "true" : "false" );
    }
}
